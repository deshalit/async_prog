"""create database structure

Revision ID: 05171c0d6634
Revises: 
Create Date: 2024-08-25 16:22:39.560426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '05171c0d6634'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cve',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('date_published', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('date_updated', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cve_published', 'cve', ['date_published'], unique=False)
    op.create_index('idx_cve_updated', 'cve', ['date_updated'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_tag_name', 'tag', ['name'], unique=False)
    op.create_table('description',
    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1), autoincrement=True, nullable=False),
    sa.Column('cve_id', sa.String(length=20), nullable=False),
    sa.Column('lang', sa.String(length=5), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['cve_id'], ['cve.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem_type',
    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1), autoincrement=True, nullable=False),
    sa.Column('cve_id', sa.String(length=20), nullable=False),
    sa.Column('lang', sa.String(length=5), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['cve_id'], ['cve.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reference',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('cve_id', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['cve_id'], ['cve.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reference_tag',
    sa.Column('id_ref', sa.Integer(), nullable=False),
    sa.Column('id_tag', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ref'], ['reference.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id_ref', 'id_tag')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reference_tag')
    op.drop_table('reference')
    op.drop_table('problem_type')
    op.drop_table('description')
    op.drop_index('idx_tag_name', table_name='tag')
    op.drop_table('tag')
    op.drop_index('idx_cve_updated', table_name='cve')
    op.drop_index('idx_cve_published', table_name='cve')
    op.drop_table('cve')
    # ### end Alembic commands ###
