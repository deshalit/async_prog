Структура проекту
-----------------
* db
    Підготовка БД:
    cd db
    docker-compose up
    alembic upgrade head
* server
    це власно fastapi application.
    Запуск: uvicorn app:app
    Дивитися тут: http://localhost:8000/docs
    api підтримує ендпойнти:
    - GET /api/cves
        повертає колекцію записів. Є фільтрація по date_published, пагінація. Не встиг реалізувати фільтр по тексту :(
        з незрозумілих поки що мені причин пошуковий запит до БД повертає пустий результат.
    - GET /api/cves{cve_id}
        повертає запис за його id
    - POST /api/cves
        додавання нового запису вручну
    -POST /api/cves/bulk
        підтримка пакетного додавання при імпорті

* load
    Підтримка автоматичного імпорту даних.
    Необхідно в файлі loader_config.py вказати реальний локальний каталог з cve-файлами (параметр Config.DIR)
    запуск:
        cd loader
        python3 main.py

* load/delta
    Підтримка інкрементного додавання cve-записів. На жаль, до релізного стану не встиг допилити :(
    Ідея полягає в тому, що ми спочатку завантажуємо
    https://raw.githubusercontent.com/CVEProject/cvelistV5/main/cves/delta.json
    Беремо з нього fetchTime, порівнюємо із локальним fetchTime - він береться з delta.json, який повинен бути в корені
    локального каталогу для cve-файлів. Якщо новий fetchTime більш новий, йдемо за адресою
    https://raw.githubusercontent.com/CVEProject/cvelistV5/main/cves/deltaLog.json
    Читаємо послідовно стрім по рядкам, поки не впираємось у "старий" fetchTime. Далі робимо із завантажених рядків
    json, витягуємо з нього адреси cve-записів та заватажуємо їх в асінхронному режимі.
    Зараз реалізація закінчується на зберіганні cve-даних в файли. Не встиг реалізувати кінцеве рішення - потрапляння цих
    записів до сервера. Варіанти:
        - безпосередній імпорт через апі - "самотужки все зробимо"
        - прямий виклик скрипта лоадера
        - сигнал лоадеру через websocket (потрібно також укладнення лоадера)
        - якийсь webhook, через який лоадер має отрмати сигнал про появу нових файлів. Також потребує додаткової
          логіки з боку лоадера.
